169. Majority Element
Easy

8712

316

Add to List

Share
Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2
 

Constraints:

n == nums.length
1 <= n <= 5 * 104
-231 <= nums[i] <= 231 - 1
#include <cmath>
class Solution {
public:
    int majorityElement(vector<int>& nums) {
     int n = nums.size();
     map<int,int> mp;
     for(int i=0;i<n;i++){
     mp[nums[i]]++;    
    }
   /* for(auto nm : mp){
    cout<<nm.first<<" "<<nm.second<<" "<<endl;    
    }*/    
    double op = ((double) n/2);    
    int gh = ceil(op);
    cout<<gh<<endl;    
    int nm;    
    for(auto jk : mp) {
    cout<<jk.second<<endl;    
    if(jk.second>=gh){
    nm = jk.first; 
    break;    
    }    
    } 
    return nm;
  /*  sort(nums.begin(),nums.end());
    int n = nums.size()/2;
    return nums[n];*/
    }
};
